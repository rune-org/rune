openapi: 3.1.0
info:
  title: Rune API
  version: 0.0.0
paths:
  /auth/login:
    post:
      tags:
      - Authentication
      summary: User login
      description: Authenticate user with email and password. Returns access and refresh
        tokens, and sets an HTTP-only cookie.
      operationId: login_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_TokenResponse_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/refresh:
    post:
      tags:
      - Authentication
      summary: Refresh access token
      description: Generate a new access token using a valid refresh token. The refresh
        token remains unchanged.
      operationId: refresh_auth_refresh_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_TokenResponse_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/logout:
    post:
      tags:
      - Authentication
      summary: User logout
      description: Logout the current user by revoking their refresh token and clearing
        the authentication cookie.
      operationId: logout_auth_logout_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_NoneType_'
  /workflows/:
    get:
      tags:
      - Workflows
      summary: List Workflows
      operationId: list_workflows_workflows__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_list_WorkflowListItem__'
    post:
      tags:
      - Workflows
      summary: Create Workflow
      operationId: create_workflow_workflows__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_WorkflowDetail_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}:
    get:
      tags:
      - Workflows
      summary: Get Workflow
      operationId: get_workflow_workflows__workflow_id__get
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: integer
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_WorkflowDetail_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Workflows
      summary: Delete Workflow
      operationId: delete_workflow_workflows__workflow_id__delete
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: integer
          title: Workflow Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/status:
    put:
      tags:
      - Workflows
      summary: Update Status
      operationId: update_status_workflows__workflow_id__status_put
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: integer
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowUpdateStatus'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_WorkflowDetail_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/name:
    put:
      tags:
      - Workflows
      summary: Update Name
      operationId: update_name_workflows__workflow_id__name_put
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: integer
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowUpdateName'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_WorkflowDetail_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/data:
    put:
      tags:
      - Workflows
      summary: Update Workflow Data
      operationId: update_workflow_data_workflows__workflow_id__data_put
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: integer
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowUpdateData'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_WorkflowDetail_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/run:
    post:
      tags:
      - Workflows
      summary: Run Workflow
      description: 'Queue a workflow for execution.


        Verifies the workflow exists and belongs to the authenticated user,

        resolves all credential references in workflow nodes,

        then publishes a run message to RabbitMQ containing workflow details with
        resolved credentials.


        Returns execution_id for tracking the execution.'
      operationId: run_workflow_workflows__workflow_id__run_post
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: integer
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_str_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /templates/:
    get:
      tags:
      - Templates
      summary: List Templates
      description: Get all templates accessible to the current user (public + their
        own).
      operationId: list_templates_templates__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_List_TemplateSummary__'
    post:
      tags:
      - Templates
      summary: Create Template
      description: Create a new template.
      operationId: create_template_templates__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_TemplateDetail_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /templates/{template_id}:
    get:
      tags:
      - Templates
      summary: Get Template
      description: Get a specific template by ID.
      operationId: get_template_templates__template_id__get
      parameters:
      - name: template_id
        in: path
        required: true
        schema:
          type: integer
          title: Template Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_TemplateDetail_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Templates
      summary: Delete Template
      description: Delete a template.
      operationId: delete_template_templates__template_id__delete
      parameters:
      - name: template_id
        in: path
        required: true
        schema:
          type: integer
          title: Template Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /templates/{template_id}/use:
    post:
      tags:
      - Templates
      summary: Use Template
      description: Mark a template as used (increment usage count) and return its
        workflow data.
      operationId: use_template_templates__template_id__use_post
      parameters:
      - name: template_id
        in: path
        required: true
        schema:
          type: integer
          title: Template Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_TemplateWorkflowData_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/:
    get:
      tags:
      - Users
      summary: Get all users
      description: Retrieve a list of all users in the system
      operationId: get_all_users_users__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_list_UserResponse__'
    post:
      tags:
      - Users
      summary: Create a new user
      description: Create a new user account. Email must be unique.
      operationId: create_user_users__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_UserResponse_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/{user_id}:
    get:
      tags:
      - Users
      summary: Admin gets user by ID
      description: Admin retrieves a single user by their id.
      operationId: get_user_by_id_users__user_id__get
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_UserResponse_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Users
      summary: Admin updates user
      description: Admin can update an existing user's information excluding its password.
      operationId: update_user_users__user_id__put
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_UserResponse_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Users
      summary: Delete user
      description: Permanently delete a user from the system.
      operationId: delete_user_users__user_id__delete
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /profile/me:
    get:
      tags:
      - Profile
      summary: Get my profile
      description: Retrieve the user's own profile info.
      operationId: get_my_profile_profile_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_UserResponse_'
    put:
      tags:
      - Profile
      summary: Update my profile
      description: Update your own profile info.
      operationId: update_my_profile_profile_me_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_UserResponse_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /credentials/:
    get:
      tags:
      - credentials
      summary: List all credentials
      description: List all credentials in the system.
      operationId: list_credentials_credentials__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_list_CredentialResponse__'
    post:
      tags:
      - credentials
      summary: Create a new credential
      description: "Create a new credential with encrypted data. \n    The credential\
        \ data will be encrypted before storage."
      operationId: create_credential_credentials__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_CredentialResponse_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /credentials/dropdown:
    get:
      tags:
      - credentials
      summary: List all credentials for dropdown
      description: List all credentials in the system for dropdowns.
      operationId: list_credentials_dropdown_credentials_dropdown_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_list_CredentialResponseDropDown__'
components:
  schemas:
    AdminUserUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 40
            minLength: 3
          - type: 'null'
          title: Name
        email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Email
        role:
          anyOf:
          - $ref: '#/components/schemas/UserRole'
          - type: 'null'
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
      type: object
      title: AdminUserUpdate
    ApiResponse_CredentialResponse_:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          $ref: '#/components/schemas/CredentialResponse'
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[CredentialResponse]
    ApiResponse_List_TemplateSummary__:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          items:
            $ref: '#/components/schemas/TemplateSummary'
          type: array
          title: Data
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[List[TemplateSummary]]
    ApiResponse_NoneType_:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          type: 'null'
          title: Data
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[NoneType]
    ApiResponse_TemplateDetail_:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          $ref: '#/components/schemas/TemplateDetail'
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[TemplateDetail]
    ApiResponse_TemplateWorkflowData_:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          $ref: '#/components/schemas/TemplateWorkflowData'
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[TemplateWorkflowData]
    ApiResponse_TokenResponse_:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          $ref: '#/components/schemas/TokenResponse'
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[TokenResponse]
    ApiResponse_UserResponse_:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          $ref: '#/components/schemas/UserResponse'
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[UserResponse]
    ApiResponse_WorkflowDetail_:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          $ref: '#/components/schemas/WorkflowDetail'
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[WorkflowDetail]
    ApiResponse_list_CredentialResponseDropDown__:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          items:
            $ref: '#/components/schemas/CredentialResponseDropDown'
          type: array
          title: Data
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[list[CredentialResponseDropDown]]
    ApiResponse_list_CredentialResponse__:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          items:
            $ref: '#/components/schemas/CredentialResponse'
          type: array
          title: Data
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[list[CredentialResponse]]
    ApiResponse_list_UserResponse__:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          title: Data
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[list[UserResponse]]
    ApiResponse_list_WorkflowListItem__:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          items:
            $ref: '#/components/schemas/WorkflowListItem'
          type: array
          title: Data
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[list[WorkflowListItem]]
    ApiResponse_str_:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether the request was successful
          default: true
        message:
          type: string
          title: Message
          description: Human-readable message
          default: Success
        data:
          type: string
          title: Data
          description: Response data
      type: object
      required:
      - data
      title: ApiResponse[str]
    CredentialCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
          description: Credential name
        credential_type:
          $ref: '#/components/schemas/CredentialType'
          description: Type of credential
        credential_data:
          additionalProperties: true
          type: object
          title: Credential Data
          description: Credential data (will be encrypted)
      type: object
      required:
      - name
      - credential_type
      title: CredentialCreate
      description: Schema for creating a new credential.
    CredentialResponse:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        credential_type:
          $ref: '#/components/schemas/CredentialType'
        created_by:
          anyOf:
          - type: integer
          - type: 'null'
          title: Created By
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - id
      - name
      - credential_type
      - created_by
      - created_at
      - updated_at
      title: CredentialResponse
      description: Schema for credential response (without sensitive data).
    CredentialResponseDropDown:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        credential_type:
          $ref: '#/components/schemas/CredentialType'
      type: object
      required:
      - id
      - name
      - credential_type
      title: CredentialResponseDropDown
      description: Schema for credential response in dropdowns.
    CredentialType:
      type: string
      enum:
      - api_key
      - oauth2
      - basic_auth
      - token
      - custom
      - smtp
      title: CredentialType
      description: Credential type enumeration.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LoginRequest:
      properties:
        email:
          type: string
          format: email
          title: Email
          description: User's email address
        password:
          type: string
          minLength: 1
          title: Password
          description: User's password
      type: object
      required:
      - email
      - password
      title: LoginRequest
    ProfileUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 40
            minLength: 3
          - type: 'null'
          title: Name
        email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Email
      type: object
      title: ProfileUpdate
    RefreshRequest:
      properties:
        refresh_token:
          type: string
          minLength: 1
          title: Refresh Token
          description: Valid refresh token
      type: object
      required:
      - refresh_token
      title: RefreshRequest
    TemplateCreate:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        description:
          type: string
          title: Description
          default: ''
        category:
          type: string
          title: Category
          default: general
        workflow_data:
          additionalProperties: true
          type: object
          title: Workflow Data
        is_public:
          type: boolean
          title: Is Public
          default: false
      type: object
      required:
      - name
      title: TemplateCreate
      description: Schema for creating a new template.
    TemplateDetail:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        category:
          type: string
          title: Category
        workflow_data:
          additionalProperties: true
          type: object
          title: Workflow Data
        usage_count:
          type: integer
          title: Usage Count
        is_public:
          type: boolean
          title: Is Public
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        created_by:
          anyOf:
          - type: integer
          - type: 'null'
          title: Created By
      type: object
      required:
      - id
      - name
      - description
      - category
      - workflow_data
      - usage_count
      - is_public
      - created_at
      - updated_at
      - created_by
      title: TemplateDetail
      description: Detailed template information including workflow data.
    TemplateSummary:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        category:
          type: string
          title: Category
        usage_count:
          type: integer
          title: Usage Count
        is_public:
          type: boolean
          title: Is Public
      type: object
      required:
      - id
      - name
      - description
      - category
      - usage_count
      - is_public
      title: TemplateSummary
      description: Template summary for listing templates.
    TemplateWorkflowData:
      properties:
        workflow_data:
          additionalProperties: true
          type: object
          title: Workflow Data
      type: object
      required:
      - workflow_data
      title: TemplateWorkflowData
      description: Schema for template workflow data response.
    TokenResponse:
      properties:
        access_token:
          type: string
          title: Access Token
          description: JWT access token
        refresh_token:
          type: string
          title: Refresh Token
          description: Refresh token for obtaining new access tokens
        token_type:
          type: string
          title: Token Type
          description: Token type, always 'bearer'
          default: bearer
        expires_in:
          type: integer
          title: Expires In
          description: Access token expiration time in seconds
      type: object
      required:
      - access_token
      - refresh_token
      - expires_in
      title: TokenResponse
    UserCreate:
      properties:
        name:
          type: string
          maxLength: 40
          minLength: 3
          title: Name
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          minLength: 8
          title: Password
        role:
          $ref: '#/components/schemas/UserRole'
          description: 'User role: ''user'' or ''admin'''
          default: user
      type: object
      required:
      - name
      - email
      - password
      title: UserCreate
    UserResponse:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        email:
          type: string
          format: email
          title: Email
        role:
          $ref: '#/components/schemas/UserRole'
        is_active:
          type: boolean
          title: Is Active
          description: Account active status
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Account creation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
        last_login_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Login At
          description: Last login timestamp
      type: object
      required:
      - id
      - name
      - email
      - role
      - is_active
      - created_at
      - updated_at
      title: UserResponse
    UserRole:
      type: string
      enum:
      - user
      - admin
      title: UserRole
      description: User role enumeration.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    WorkflowCreate:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          default: ''
        workflow_data:
          additionalProperties: true
          type: object
          title: Workflow Data
      type: object
      required:
      - name
      title: WorkflowCreate
    WorkflowDetail:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        is_active:
          type: boolean
          title: Is Active
        workflow_data:
          additionalProperties: true
          type: object
          title: Workflow Data
        version:
          type: integer
          title: Version
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - id
      - name
      - description
      - is_active
      - workflow_data
      - version
      - created_at
      - updated_at
      title: WorkflowDetail
    WorkflowListItem:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        is_active:
          type: boolean
          title: Is Active
      type: object
      required:
      - id
      - name
      - is_active
      title: WorkflowListItem
    WorkflowUpdateData:
      properties:
        workflow_data:
          additionalProperties: true
          type: object
          title: Workflow Data
          description: Updated workflow data
      type: object
      required:
      - workflow_data
      title: WorkflowUpdateData
    WorkflowUpdateName:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
      type: object
      required:
      - name
      title: WorkflowUpdateName
    WorkflowUpdateStatus:
      properties:
        is_active:
          type: boolean
          title: Is Active
      type: object
      required:
      - is_active
      title: WorkflowUpdateStatus
