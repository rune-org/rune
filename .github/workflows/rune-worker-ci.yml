name: Rune Worker CI

on:
  push:
    branches: ["main"]
    paths:
      - "services/rune-worker/**"

  pull_request:
    branches: ["main"]
    paths:
      - "services/rune-worker/**"

concurrency:
  group: worker-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tidy:
    name: Verify Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Tidy modules
        run: go mod tidy
        working-directory: ./services/rune-worker

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [tidy]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5
          working-directory: ./services/rune-worker
          args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [tidy]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build
        run: go build -v ./...
        working-directory: ./services/rune-worker

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [tidy]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Run Unit Tests
        run: go test -v ./...
        working-directory: ./services/rune-worker

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [tidy]

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Wait for services
        run: |
          echo "Waiting for Redis..."
          timeout 30 bash -c 'until redis-cli -h localhost -p 6379 ping; do sleep 1; done'
          echo "Waiting for RabbitMQ..."
          timeout 30 bash -c 'until curl -f http://localhost:15672; do sleep 1; done'

      - name: Run Integration Tests
        run: go test -v -tags=integration ./...
        working-directory: ./services/rune-worker
        env:
          RABBITMQ_URL: amqp://guest:guest@localhost:5672/
          REDIS_ADDR: localhost:6379
