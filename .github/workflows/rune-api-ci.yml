name: API Service CI

on:
  push:
    branches: [main]
    paths:
      - "services/api/**"
  pull_request:
    branches: [main]
    paths:
      - "services/api/**"

concurrency:
  group: api-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: services/api/requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
        working-directory: ./services/api

      - name: Run ruff linter
        run: ruff check .
        working-directory: ./services/api

      - name: Run ruff formatter check
        run: ruff format --check .
        working-directory: ./services/api
        
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint]

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_rune
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management-alpine
        env:
          RABBITMQ_DEFAULT_USER: test_user
          RABBITMQ_DEFAULT_PASS: test_password
        ports:
          - 5673:5672
        options: >-
          --health-cmd "rabbitmq-diagnostics ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: services/api/requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
        working-directory: ./services/api

      - name: Run tests
        run: pytest --cov=src --cov-report=xml --cov-report=term
        working-directory: ./services/api

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: services/api/requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install safety bandit
        working-directory: ./services/api

      - name: Run safety check
        run: safety check --json
        working-directory: ./services/api
        continue-on-error: true

      - name: Run bandit security linter
        run: bandit -r src -f json
        working-directory: ./services/api
        continue-on-error: true
