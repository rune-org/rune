// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://services` | (string & {});
};

/**
 * AdminUserUpdate
 */
export type AdminUserUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Email
     */
    email?: string | null;
    role?: UserRole | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * ApiResponse[CredentialResponse]
 */
export type ApiResponseCredentialResponse = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Response data
     */
    data: CredentialResponse;
};

/**
 * ApiResponse[List[TemplateSummary]]
 */
export type ApiResponseListTemplateSummary = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Data
     *
     * Response data
     */
    data: Array<TemplateSummary>;
};

/**
 * ApiResponse[NoneType]
 */
export type ApiResponseNoneType = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Data
     *
     * Response data
     */
    data: null;
};

/**
 * ApiResponse[TemplateDetail]
 */
export type ApiResponseTemplateDetail = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Response data
     */
    data: TemplateDetail;
};

/**
 * ApiResponse[TemplateWorkflowData]
 */
export type ApiResponseTemplateWorkflowData = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Response data
     */
    data: TemplateWorkflowData;
};

/**
 * ApiResponse[TokenResponse]
 */
export type ApiResponseTokenResponse = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Response data
     */
    data: TokenResponse;
};

/**
 * ApiResponse[UserResponse]
 */
export type ApiResponseUserResponse = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Response data
     */
    data: UserResponse;
};

/**
 * ApiResponse[WorkflowDetail]
 */
export type ApiResponseWorkflowDetail = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Response data
     */
    data: WorkflowDetail;
};

/**
 * ApiResponse[dict]
 */
export type ApiResponseDict = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Data
     *
     * Response data
     */
    data: {
        [key: string]: unknown;
    };
};

/**
 * ApiResponse[list[CredentialResponseDropDown]]
 */
export type ApiResponseListCredentialResponseDropDown = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Data
     *
     * Response data
     */
    data: Array<CredentialResponseDropDown>;
};

/**
 * ApiResponse[list[CredentialResponse]]
 */
export type ApiResponseListCredentialResponse = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Data
     *
     * Response data
     */
    data: Array<CredentialResponse>;
};

/**
 * ApiResponse[list[UserResponse]]
 */
export type ApiResponseListUserResponse = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Data
     *
     * Response data
     */
    data: Array<UserResponse>;
};

/**
 * ApiResponse[list[WorkflowListItem]]
 */
export type ApiResponseListWorkflowListItem = {
    /**
     * Success
     *
     * Whether the request was successful
     */
    success?: boolean;
    /**
     * Message
     *
     * Human-readable message
     */
    message?: string;
    /**
     * Data
     *
     * Response data
     */
    data: Array<WorkflowListItem>;
};

/**
 * CredentialCreate
 *
 * Schema for creating a new credential.
 */
export type CredentialCreate = {
    /**
     * Name
     *
     * Credential name
     */
    name: string;
    /**
     * Type of credential
     */
    credential_type: CredentialType;
    /**
     * Credential Data
     *
     * Credential data (will be encrypted)
     */
    credential_data?: {
        [key: string]: unknown;
    };
};

/**
 * CredentialResponse
 *
 * Schema for credential response (without sensitive data).
 */
export type CredentialResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    credential_type: CredentialType;
    /**
     * Created By
     */
    created_by: number | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * CredentialResponseDropDown
 *
 * Schema for credential response in dropdowns.
 */
export type CredentialResponseDropDown = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    credential_type: CredentialType;
};

/**
 * CredentialType
 *
 * Credential type enumeration.
 */
export type CredentialType = 'api_key' | 'oauth2' | 'basic_auth' | 'token' | 'custom' | 'smtp';

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * LoginRequest
 */
export type LoginRequest = {
    /**
     * Email
     *
     * User's email address
     */
    email: string;
    /**
     * Password
     *
     * User's password
     */
    password: string;
};

/**
 * ProfileUpdate
 */
export type ProfileUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Email
     */
    email?: string | null;
};

/**
 * RefreshRequest
 */
export type RefreshRequest = {
    /**
     * Refresh Token
     *
     * Valid refresh token
     */
    refresh_token: string;
};

/**
 * TemplateCreate
 *
 * Schema for creating a new template.
 */
export type TemplateCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string;
    /**
     * Category
     */
    category?: string;
    /**
     * Workflow Data
     */
    workflow_data?: {
        [key: string]: unknown;
    };
    /**
     * Is Public
     */
    is_public?: boolean;
};

/**
 * TemplateDetail
 *
 * Detailed template information including workflow data.
 */
export type TemplateDetail = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
    /**
     * Category
     */
    category: string;
    /**
     * Workflow Data
     */
    workflow_data: {
        [key: string]: unknown;
    };
    /**
     * Usage Count
     */
    usage_count: number;
    /**
     * Is Public
     */
    is_public: boolean;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Created By
     */
    created_by: number | null;
};

/**
 * TemplateSummary
 *
 * Template summary for listing templates.
 */
export type TemplateSummary = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
    /**
     * Category
     */
    category: string;
    /**
     * Usage Count
     */
    usage_count: number;
    /**
     * Is Public
     */
    is_public: boolean;
};

/**
 * TemplateWorkflowData
 *
 * Schema for template workflow data response.
 */
export type TemplateWorkflowData = {
    /**
     * Workflow Data
     */
    workflow_data: {
        [key: string]: unknown;
    };
};

/**
 * TokenResponse
 */
export type TokenResponse = {
    /**
     * Access Token
     *
     * JWT access token
     */
    access_token: string;
    /**
     * Refresh Token
     *
     * Refresh token for obtaining new access tokens
     */
    refresh_token: string;
    /**
     * Token Type
     *
     * Token type, always 'bearer'
     */
    token_type?: string;
    /**
     * Expires In
     *
     * Access token expiration time in seconds
     */
    expires_in: number;
};

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
    /**
     * User role: 'user' or 'admin'
     */
    role?: UserRole;
};

/**
 * UserResponse
 */
export type UserResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Email
     */
    email: string;
    role: UserRole;
    /**
     * Is Active
     *
     * Account active status
     */
    is_active: boolean;
    /**
     * Created At
     *
     * Account creation timestamp
     */
    created_at: string;
    /**
     * Updated At
     *
     * Last update timestamp
     */
    updated_at: string;
    /**
     * Last Login At
     *
     * Last login timestamp
     */
    last_login_at?: string | null;
};

/**
 * UserRole
 *
 * User role enumeration.
 */
export type UserRole = 'user' | 'admin';

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * WorkflowCreate
 */
export type WorkflowCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Workflow Data
     */
    workflow_data?: {
        [key: string]: unknown;
    };
};

/**
 * WorkflowDetail
 */
export type WorkflowDetail = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string | null;
    /**
     * Is Active
     */
    is_active: boolean;
    /**
     * Workflow Data
     */
    workflow_data: {
        [key: string]: unknown;
    };
    /**
     * Version
     */
    version: number;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * WorkflowListItem
 */
export type WorkflowListItem = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Is Active
     */
    is_active: boolean;
};

/**
 * WorkflowUpdateData
 */
export type WorkflowUpdateData = {
    /**
     * Workflow Data
     *
     * Updated workflow data
     */
    workflow_data: {
        [key: string]: unknown;
    };
};

/**
 * WorkflowUpdateName
 */
export type WorkflowUpdateName = {
    /**
     * Name
     */
    name: string;
};

/**
 * WorkflowUpdateStatus
 */
export type WorkflowUpdateStatus = {
    /**
     * Is Active
     */
    is_active: boolean;
};

export type LoginAuthLoginPostData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type LoginAuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginAuthLoginPostError = LoginAuthLoginPostErrors[keyof LoginAuthLoginPostErrors];

export type LoginAuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseTokenResponse;
};

export type LoginAuthLoginPostResponse = LoginAuthLoginPostResponses[keyof LoginAuthLoginPostResponses];

export type RefreshAuthRefreshPostData = {
    body: RefreshRequest;
    path?: never;
    query?: never;
    url: '/auth/refresh';
};

export type RefreshAuthRefreshPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RefreshAuthRefreshPostError = RefreshAuthRefreshPostErrors[keyof RefreshAuthRefreshPostErrors];

export type RefreshAuthRefreshPostResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseTokenResponse;
};

export type RefreshAuthRefreshPostResponse = RefreshAuthRefreshPostResponses[keyof RefreshAuthRefreshPostResponses];

export type LogoutAuthLogoutPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout';
};

export type LogoutAuthLogoutPostResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseNoneType;
};

export type LogoutAuthLogoutPostResponse = LogoutAuthLogoutPostResponses[keyof LogoutAuthLogoutPostResponses];

export type ListWorkflowsWorkflowsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/workflows/';
};

export type ListWorkflowsWorkflowsGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseListWorkflowListItem;
};

export type ListWorkflowsWorkflowsGetResponse = ListWorkflowsWorkflowsGetResponses[keyof ListWorkflowsWorkflowsGetResponses];

export type CreateWorkflowWorkflowsPostData = {
    body: WorkflowCreate;
    path?: never;
    query?: never;
    url: '/workflows/';
};

export type CreateWorkflowWorkflowsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateWorkflowWorkflowsPostError = CreateWorkflowWorkflowsPostErrors[keyof CreateWorkflowWorkflowsPostErrors];

export type CreateWorkflowWorkflowsPostResponses = {
    /**
     * Successful Response
     */
    201: ApiResponseWorkflowDetail;
};

export type CreateWorkflowWorkflowsPostResponse = CreateWorkflowWorkflowsPostResponses[keyof CreateWorkflowWorkflowsPostResponses];

export type DeleteWorkflowWorkflowsWorkflowIdDeleteData = {
    body?: never;
    path: {
        /**
         * Workflow Id
         */
        workflow_id: number;
    };
    query?: never;
    url: '/workflows/{workflow_id}';
};

export type DeleteWorkflowWorkflowsWorkflowIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteWorkflowWorkflowsWorkflowIdDeleteError = DeleteWorkflowWorkflowsWorkflowIdDeleteErrors[keyof DeleteWorkflowWorkflowsWorkflowIdDeleteErrors];

export type DeleteWorkflowWorkflowsWorkflowIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteWorkflowWorkflowsWorkflowIdDeleteResponse = DeleteWorkflowWorkflowsWorkflowIdDeleteResponses[keyof DeleteWorkflowWorkflowsWorkflowIdDeleteResponses];

export type GetWorkflowWorkflowsWorkflowIdGetData = {
    body?: never;
    path: {
        /**
         * Workflow Id
         */
        workflow_id: number;
    };
    query?: never;
    url: '/workflows/{workflow_id}';
};

export type GetWorkflowWorkflowsWorkflowIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetWorkflowWorkflowsWorkflowIdGetError = GetWorkflowWorkflowsWorkflowIdGetErrors[keyof GetWorkflowWorkflowsWorkflowIdGetErrors];

export type GetWorkflowWorkflowsWorkflowIdGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseWorkflowDetail;
};

export type GetWorkflowWorkflowsWorkflowIdGetResponse = GetWorkflowWorkflowsWorkflowIdGetResponses[keyof GetWorkflowWorkflowsWorkflowIdGetResponses];

export type UpdateStatusWorkflowsWorkflowIdStatusPutData = {
    body: WorkflowUpdateStatus;
    path: {
        /**
         * Workflow Id
         */
        workflow_id: number;
    };
    query?: never;
    url: '/workflows/{workflow_id}/status';
};

export type UpdateStatusWorkflowsWorkflowIdStatusPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateStatusWorkflowsWorkflowIdStatusPutError = UpdateStatusWorkflowsWorkflowIdStatusPutErrors[keyof UpdateStatusWorkflowsWorkflowIdStatusPutErrors];

export type UpdateStatusWorkflowsWorkflowIdStatusPutResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseWorkflowDetail;
};

export type UpdateStatusWorkflowsWorkflowIdStatusPutResponse = UpdateStatusWorkflowsWorkflowIdStatusPutResponses[keyof UpdateStatusWorkflowsWorkflowIdStatusPutResponses];

export type UpdateNameWorkflowsWorkflowIdNamePutData = {
    body: WorkflowUpdateName;
    path: {
        /**
         * Workflow Id
         */
        workflow_id: number;
    };
    query?: never;
    url: '/workflows/{workflow_id}/name';
};

export type UpdateNameWorkflowsWorkflowIdNamePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateNameWorkflowsWorkflowIdNamePutError = UpdateNameWorkflowsWorkflowIdNamePutErrors[keyof UpdateNameWorkflowsWorkflowIdNamePutErrors];

export type UpdateNameWorkflowsWorkflowIdNamePutResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseWorkflowDetail;
};

export type UpdateNameWorkflowsWorkflowIdNamePutResponse = UpdateNameWorkflowsWorkflowIdNamePutResponses[keyof UpdateNameWorkflowsWorkflowIdNamePutResponses];

export type UpdateWorkflowDataWorkflowsWorkflowIdDataPutData = {
    body: WorkflowUpdateData;
    path: {
        /**
         * Workflow Id
         */
        workflow_id: number;
    };
    query?: never;
    url: '/workflows/{workflow_id}/data';
};

export type UpdateWorkflowDataWorkflowsWorkflowIdDataPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateWorkflowDataWorkflowsWorkflowIdDataPutError = UpdateWorkflowDataWorkflowsWorkflowIdDataPutErrors[keyof UpdateWorkflowDataWorkflowsWorkflowIdDataPutErrors];

export type UpdateWorkflowDataWorkflowsWorkflowIdDataPutResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseWorkflowDetail;
};

export type UpdateWorkflowDataWorkflowsWorkflowIdDataPutResponse = UpdateWorkflowDataWorkflowsWorkflowIdDataPutResponses[keyof UpdateWorkflowDataWorkflowsWorkflowIdDataPutResponses];

export type RunWorkflowWorkflowsWorkflowIdRunPostData = {
    body?: never;
    path: {
        /**
         * Workflow Id
         */
        workflow_id: number;
    };
    query?: never;
    url: '/workflows/{workflow_id}/run';
};

export type RunWorkflowWorkflowsWorkflowIdRunPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RunWorkflowWorkflowsWorkflowIdRunPostError = RunWorkflowWorkflowsWorkflowIdRunPostErrors[keyof RunWorkflowWorkflowsWorkflowIdRunPostErrors];

export type RunWorkflowWorkflowsWorkflowIdRunPostResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseDict;
};

export type RunWorkflowWorkflowsWorkflowIdRunPostResponse = RunWorkflowWorkflowsWorkflowIdRunPostResponses[keyof RunWorkflowWorkflowsWorkflowIdRunPostResponses];

export type ListTemplatesTemplatesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/templates/';
};

export type ListTemplatesTemplatesGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseListTemplateSummary;
};

export type ListTemplatesTemplatesGetResponse = ListTemplatesTemplatesGetResponses[keyof ListTemplatesTemplatesGetResponses];

export type CreateTemplateTemplatesPostData = {
    body: TemplateCreate;
    path?: never;
    query?: never;
    url: '/templates/';
};

export type CreateTemplateTemplatesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTemplateTemplatesPostError = CreateTemplateTemplatesPostErrors[keyof CreateTemplateTemplatesPostErrors];

export type CreateTemplateTemplatesPostResponses = {
    /**
     * Successful Response
     */
    201: ApiResponseTemplateDetail;
};

export type CreateTemplateTemplatesPostResponse = CreateTemplateTemplatesPostResponses[keyof CreateTemplateTemplatesPostResponses];

export type DeleteTemplateTemplatesTemplateIdDeleteData = {
    body?: never;
    path: {
        /**
         * Template Id
         */
        template_id: number;
    };
    query?: never;
    url: '/templates/{template_id}';
};

export type DeleteTemplateTemplatesTemplateIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteTemplateTemplatesTemplateIdDeleteError = DeleteTemplateTemplatesTemplateIdDeleteErrors[keyof DeleteTemplateTemplatesTemplateIdDeleteErrors];

export type DeleteTemplateTemplatesTemplateIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteTemplateTemplatesTemplateIdDeleteResponse = DeleteTemplateTemplatesTemplateIdDeleteResponses[keyof DeleteTemplateTemplatesTemplateIdDeleteResponses];

export type GetTemplateTemplatesTemplateIdGetData = {
    body?: never;
    path: {
        /**
         * Template Id
         */
        template_id: number;
    };
    query?: never;
    url: '/templates/{template_id}';
};

export type GetTemplateTemplatesTemplateIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTemplateTemplatesTemplateIdGetError = GetTemplateTemplatesTemplateIdGetErrors[keyof GetTemplateTemplatesTemplateIdGetErrors];

export type GetTemplateTemplatesTemplateIdGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseTemplateDetail;
};

export type GetTemplateTemplatesTemplateIdGetResponse = GetTemplateTemplatesTemplateIdGetResponses[keyof GetTemplateTemplatesTemplateIdGetResponses];

export type UseTemplateTemplatesTemplateIdUsePostData = {
    body?: never;
    path: {
        /**
         * Template Id
         */
        template_id: number;
    };
    query?: never;
    url: '/templates/{template_id}/use';
};

export type UseTemplateTemplatesTemplateIdUsePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UseTemplateTemplatesTemplateIdUsePostError = UseTemplateTemplatesTemplateIdUsePostErrors[keyof UseTemplateTemplatesTemplateIdUsePostErrors];

export type UseTemplateTemplatesTemplateIdUsePostResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseTemplateWorkflowData;
};

export type UseTemplateTemplatesTemplateIdUsePostResponse = UseTemplateTemplatesTemplateIdUsePostResponses[keyof UseTemplateTemplatesTemplateIdUsePostResponses];

export type GetAllUsersUsersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/';
};

export type GetAllUsersUsersGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseListUserResponse;
};

export type GetAllUsersUsersGetResponse = GetAllUsersUsersGetResponses[keyof GetAllUsersUsersGetResponses];

export type CreateUserUsersPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/users/';
};

export type CreateUserUsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserUsersPostError = CreateUserUsersPostErrors[keyof CreateUserUsersPostErrors];

export type CreateUserUsersPostResponses = {
    /**
     * Successful Response
     */
    201: ApiResponseUserResponse;
};

export type CreateUserUsersPostResponse = CreateUserUsersPostResponses[keyof CreateUserUsersPostResponses];

export type DeleteUserUsersUserIdDeleteData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/users/{user_id}';
};

export type DeleteUserUsersUserIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserUsersUserIdDeleteError = DeleteUserUsersUserIdDeleteErrors[keyof DeleteUserUsersUserIdDeleteErrors];

export type DeleteUserUsersUserIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteUserUsersUserIdDeleteResponse = DeleteUserUsersUserIdDeleteResponses[keyof DeleteUserUsersUserIdDeleteResponses];

export type GetUserByIdUsersUserIdGetData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/users/{user_id}';
};

export type GetUserByIdUsersUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserByIdUsersUserIdGetError = GetUserByIdUsersUserIdGetErrors[keyof GetUserByIdUsersUserIdGetErrors];

export type GetUserByIdUsersUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseUserResponse;
};

export type GetUserByIdUsersUserIdGetResponse = GetUserByIdUsersUserIdGetResponses[keyof GetUserByIdUsersUserIdGetResponses];

export type UpdateUserUsersUserIdPutData = {
    body: AdminUserUpdate;
    path: {
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/users/{user_id}';
};

export type UpdateUserUsersUserIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserUsersUserIdPutError = UpdateUserUsersUserIdPutErrors[keyof UpdateUserUsersUserIdPutErrors];

export type UpdateUserUsersUserIdPutResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseUserResponse;
};

export type UpdateUserUsersUserIdPutResponse = UpdateUserUsersUserIdPutResponses[keyof UpdateUserUsersUserIdPutResponses];

export type GetMyProfileProfileMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/profile/me';
};

export type GetMyProfileProfileMeGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseUserResponse;
};

export type GetMyProfileProfileMeGetResponse = GetMyProfileProfileMeGetResponses[keyof GetMyProfileProfileMeGetResponses];

export type UpdateMyProfileProfileMePutData = {
    body: ProfileUpdate;
    path?: never;
    query?: never;
    url: '/profile/me';
};

export type UpdateMyProfileProfileMePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMyProfileProfileMePutError = UpdateMyProfileProfileMePutErrors[keyof UpdateMyProfileProfileMePutErrors];

export type UpdateMyProfileProfileMePutResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseUserResponse;
};

export type UpdateMyProfileProfileMePutResponse = UpdateMyProfileProfileMePutResponses[keyof UpdateMyProfileProfileMePutResponses];

export type ListCredentialsCredentialsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/credentials/';
};

export type ListCredentialsCredentialsGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseListCredentialResponse;
};

export type ListCredentialsCredentialsGetResponse = ListCredentialsCredentialsGetResponses[keyof ListCredentialsCredentialsGetResponses];

export type CreateCredentialCredentialsPostData = {
    body: CredentialCreate;
    path?: never;
    query?: never;
    url: '/credentials/';
};

export type CreateCredentialCredentialsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCredentialCredentialsPostError = CreateCredentialCredentialsPostErrors[keyof CreateCredentialCredentialsPostErrors];

export type CreateCredentialCredentialsPostResponses = {
    /**
     * Successful Response
     */
    201: ApiResponseCredentialResponse;
};

export type CreateCredentialCredentialsPostResponse = CreateCredentialCredentialsPostResponses[keyof CreateCredentialCredentialsPostResponses];

export type ListCredentialsDropdownCredentialsDropdownGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/credentials/dropdown';
};

export type ListCredentialsDropdownCredentialsDropdownGetResponses = {
    /**
     * Successful Response
     */
    200: ApiResponseListCredentialResponseDropDown;
};

export type ListCredentialsDropdownCredentialsDropdownGetResponse = ListCredentialsDropdownCredentialsDropdownGetResponses[keyof ListCredentialsDropdownCredentialsDropdownGetResponses];
